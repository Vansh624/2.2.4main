{"mode":"Blocks","hardwareTarget":"brain","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"U`9aA+=)r+L1tzA.)-qi\">myVariable</variable><variable type=\"boolean\" id=\"9(f7V~=!@G;?bK#OL`wI\">DEBUG</variable><variable type=\"broadcast_msg\" id=\"VrQrwwk,I=K=-Hc?_=m=\">message1</variable><variable type=\"broadcast_msg\" id=\"CC6zDZjxm9Al/3POLI#d\">LOOK_FOR_RG</variable><variable type=\"broadcast_msg\" id=\"Q/ZMS)iVOy|{2hcm3a?W\">FWD</variable><variable type=\"broadcast_msg\" id=\"e[3?Kic}!m3M*ftr;FG9\">FWD_S</variable><variable type=\"broadcast_msg\" id=\"~#`N+Iv6nkdXJWLVcM(w\">RT</variable></variables><block type=\"exp_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"-190\" y=\"-110\"><next><block type=\"exp_motion_set_motor_velocity\" id=\"YTV+gKk7lSus#3[zlBYA\"><field name=\"MOTOR\">Motor1</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"jC94.%Ys+0u4(]#B.I3`\"><field name=\"NUM\">20</field></shadow></value><next><block type=\"exp_motion_set_motor_velocity\" id=\"6m26/Z?F(1_T1Dkzz;Y%\"><field name=\"MOTOR\">Motor5</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"n$.xWpyo,n]Nb2Nn|fh0\"><field name=\"NUM\">20</field></shadow></value><next><block type=\"exp_variables_set_boolean_variable\" id=\"6F(MtWLhh-IRv[H]4PN+\"><field name=\"VARIABLE\" id=\"9(f7V~=!@G;?bK#OL`wI\" variabletype=\"boolean\">DEBUG</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"y99UKb2(g2oU$uI{+_jM\"><field name=\"VALUE\">false</field></shadow></value><next><block type=\"exp_looks_set_font\" id=\"W3/b)SZK1`VqAF*Vb^b)\"><field name=\"FONT\">mono15</field><next><block type=\"exp_other_comment\" id=\"[728u`l(rUh)*Kus{u6L\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"#/ZG}oVXKB%I.w(2)J;K\"><field name=\"comment\">Loop forever checking for all these color signatures until the car parks and the program ends</field></shadow></value><next><block type=\"exp_control_forever\" id=\"b/agvM5S/E?TL)B2(0/%\"><statement name=\"SUBSTACK\"><block type=\"exp_looks_clear_all_rows\" id=\"as{Pmp(XW_YFv1pwR[(-\"><field name=\"TARGET\">Brain</field><next><block type=\"exp_looks_set_cursor\" id=\"h%mE{nHAE,gc!@Yb_WP/\"><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"Yhc1#ue-?E1DxOfAIyRK\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"/oOv2,($!;aRV[blqdPi\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"exp_events_broadcast_and_wait\" id=\"`Qdw6|?~7)7tWR`bD$(F\"><field name=\"BROADCAST_OPTION\" id=\"CC6zDZjxm9Al/3POLI#d\" variabletype=\"broadcast_msg\">LOOK_FOR_RG</field><next><block type=\"exp_control_wait\" id=\"oq.!:E*~(yD~metJ|Q4Q\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"bxWWaAwNKPy+,,xWS.._\"><field name=\"NUM\">0.1</field></shadow></value></block></next></block></next></block></next></block></statement></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"exp_events_when_broadcasted\" id=\"b=p+T@j{Z`L_kzy@lC_x\" x=\"830\" y=\"330\"><field name=\"BROADCAST_OPTION\" id=\"CC6zDZjxm9Al/3POLI#d\" variabletype=\"broadcast_msg\">LOOK_FOR_RG</field><next><block type=\"exp_other_comment\" id=\"Jmo?WizHJmq(+^;i^VoD\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\",k0AfC+]i/N8#X${kpu1\"><field name=\"comment\">This event looks for red/green object then turns right</field></shadow></value><next><block type=\"exp_sensing_snapshot\" id=\"QSAC0@:%:^O#{DOYF$@-\"><field name=\"VISION\">Vision4</field><field name=\"SIGNATURE\">RED_GREEN</field><next><block type=\"exp_other_comment\" id=\"KUq%-ds!|{;;xz#s64n6\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"go-X,bfUvl]/1IpwzfOE\"><field name=\"comment\">This conditional checks if the color is detected</field></shadow></value><next><block type=\"exp_control_if_then_else\" id=\"{qv!5E^H#IXl#sjJ!{$q\"><value name=\"CONDITION\"><block type=\"exp_sensing_object_exists\" id=\"!v!NQ8Sm9B3RBmCPBWK$\"><field name=\"VISION\">Vision4</field></block></value><statement name=\"SUBSTACK\"><block type=\"procedures_call\" id=\"84[k4J2z*19H7IOfF-A^\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Printinfo\" proceduredefid=\"=%PMX(xryL!k6JtzP}}K\" argumentids=\"[]\" warp=\"false\"></mutation><next><block type=\"exp_control_if_elseif_else\" id=\"8HNxat}^mfcCsSuh%x`{\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" branches=\"2\"></mutation><value name=\"CONDITION1\"><block type=\"exp_operator_greater_than\" id=\"pfKNf3=:@QFy0tk^`B:d\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"D-Le16a0_P.p3!CP(EV6\"><field name=\"NUM\">0</field></shadow><block type=\"exp_sensing_vision_object\" id=\"(?Xu?IT#iavG{IJE[D]g\"><field name=\"VISION\">Vision4</field><field name=\"PROPERTY\">centerY</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"lLD6?fb/65nKk,|URGa}\"><field name=\"NUM\">120</field></shadow></value></block></value><statement name=\"SUBSTACK1\"><block type=\"exp_other_comment\" id=\"YoYrAe8}ZfvL|M_4KxvP\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"Rq.tv.Y}I1IqBUviSukR\"><field name=\"comment\">Red/green is farther than 6 inches</field></shadow></value><next><block type=\"exp_events_broadcast_and_wait\" id=\"Y/cZ3QUP$v,wNgu:,TF~\"><field name=\"BROADCAST_OPTION\" id=\"e[3?Kic}!m3M*ftr;FG9\" variabletype=\"broadcast_msg\">FWD_S</field></block></next></block></statement><statement name=\"SUBSTACK2\"><block type=\"exp_other_comment\" id=\"ormaf-6DL`t-_TDduAx+\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"eWte0ln=0;sQK)hTLU1p\"><field name=\"comment\">Red/green is centered in SDV's field of vision</field></shadow></value></block></statement><statement name=\"SUBSTACK_ELSE\"><block type=\"exp_events_broadcast_and_wait\" id=\"oXM*|eCHbD6zOzh%Z1gY\"><field name=\"BROADCAST_OPTION\" id=\"~#`N+Iv6nkdXJWLVcM(w\" variabletype=\"broadcast_msg\">RT</field><next><block type=\"exp_other_comment\" id=\"}`lLFuP3rbkEY-j0VO+{\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"a9961,O1f5efxHUWdY.@\"><field name=\"comment\">Adjust to the center object in the view</field></shadow></value></block></next></block></statement></block></next></block></statement><statement name=\"SUBSTACK2\"><block type=\"exp_other_comment\" id=\"mjHr)}eKK+!ZmVKn)O]#\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"z9/5(C4j0/BdNP6RHX-u\"><field name=\"comment\">No object detected.</field></shadow></value><next><block type=\"exp_looks_print\" id=\"IOO:w,kii.PC8POo}:7g\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"AyGknk;Ssdi]sUC.M|:a\"><field name=\"TEXT\">Look for red/green</field></shadow></value></block></next></block></statement></block></next></block></next></block></next></block></next></block><block type=\"exp_events_when_broadcasted\" id=\"c}Mn/*A9FH~(w%VcZNG5\" x=\"-450\" y=\"470\"><field name=\"BROADCAST_OPTION\" id=\"~#`N+Iv6nkdXJWLVcM(w\" variabletype=\"broadcast_msg\">RT</field><next><block type=\"exp_control_if_then_else\" id=\"+l~c$gmY[|4c*i?aF$yw\"><value name=\"CONDITION\"><block type=\"exp_variables_boolean_variable\" id=\"{@M-Zt?=T!7A^.,AsWn@\"><field name=\"VARIABLE\" id=\"9(f7V~=!@G;?bK#OL`wI\" variabletype=\"boolean\">DEBUG</field></block></value><statement name=\"SUBSTACK\"><block type=\"exp_looks_print\" id=\"$`7Tfr}20Y7nE4tK771)\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"l_[}K*2TBirr4~Yxh@4s\"><field name=\"TEXT\">Turn right!</field></shadow></value></block></statement><statement name=\"SUBSTACK2\"><block type=\"exp_motion_spin_for\" id=\"@GN8vZ2I2UjWAvRN%-%s\"><field name=\"MOTOR\">Motor1</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"##A-buzbN8/DRt%hu[=O\"><field name=\"NUM\">225</field></shadow></value></block></statement></block></next></block><block type=\"procedures_definition\" id=\"spbIT*`ceC?~%~W=##_?\" x=\"-1190\" y=\"530\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"=%PMX(xryL!k6JtzP}}K\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Printinfo\" proceduredefid=\"=%PMX(xryL!k6JtzP}}K\" argumentids=\"[]\" argumentnames=\"[]\" argumentdefaults=\"[]\" argumenttypes=\"[]\" warp=\"false\"></mutation></shadow></statement><next><block type=\"exp_other_comment\" id=\"^$n*xV}#WTd*X*Lh(.3V\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"(-r5:E^~M,P=,ZoNq,.#\"><field name=\"comment\">This procedure block...</field></shadow></value><next><block type=\"exp_looks_print\" id=\"Id4%{MvlQo4VFVC+P{D^\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"08.3]6wEkvASms(09Saa\"><field name=\"TEXT\">X:</field></shadow></value><next><block type=\"exp_looks_print\" id=\"=+nuTBB9(jSR;h4`~taR\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"g;nwmzN/`49ZGQ6*`+x2\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"exp_sensing_vision_object\" id=\")zhGQQ4ktsGSzbR`3s`N\"><field name=\"VISION\">Vision4</field><field name=\"PROPERTY\">centerX</field></block></value><next><block type=\"exp_looks_print\" id=\"DUM,A*$KDqjEpgx)-RL,\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"z0Jp*AVV$X(AI1t%|;qU\"><field name=\"TEXT\">Y:</field></shadow></value><next><block type=\"exp_looks_print\" id=\"MRsLM_ev]d2|?P|Kr?$p\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"sNZlB|QAz,Iy51Qe:)w?\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"exp_sensing_vision_object\" id=\"ZB7AbC|0!Qji(7DP5c_;\"><field name=\"VISION\">Vision4</field><field name=\"PROPERTY\">centerY</field></block></value></block></next></block></next></block></next></block></next></block></next></block><block type=\"exp_events_when_broadcasted\" id=\"$ZV(!VbuG8`JO@j_E]AD\" x=\"170\" y=\"470\"><field name=\"BROADCAST_OPTION\" id=\"~#`N+Iv6nkdXJWLVcM(w\" variabletype=\"broadcast_msg\">RT</field><next><block type=\"exp_other_comment\" id=\"S/[C:iagx~jo*?m%QBH,\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"Pb1ILa)Lc8IGserQm{Z#\"><field name=\"comment\">no need to print since that is already done in the other RT procedure</field></shadow></value><next><block type=\"exp_control_if_then\" id=\"W]9fJ_A#D7B7ZCPdfJb2\"><value name=\"CONDITION\"><block type=\"exp_operator_not\" id=\"RakJ;f~qxm/p|Pqk3Hk|\"><value name=\"OPERAND\"><block type=\"exp_variables_boolean_variable\" id=\"ORN_yT,O7zbmD3iZX%O5\"><field name=\"VARIABLE\" id=\"9(f7V~=!@G;?bK#OL`wI\" variabletype=\"boolean\">DEBUG</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"exp_motion_spin_for\" id=\"$bba-1Vn!M:y-6*~ajxT\"><field name=\"MOTOR\">Motor5</field><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"?_|@0D|4_Mvg_,806]FQ\"><field name=\"NUM\">225</field></shadow></value></block></statement></block></next></block></next></block><block type=\"exp_events_when_broadcasted\" id=\"KZlb(t;79%@1j0Cq/`z=\" x=\"-450\" y=\"790\"><field name=\"BROADCAST_OPTION\" id=\"Q/ZMS)iVOy|{2hcm3a?W\" variabletype=\"broadcast_msg\">FWD</field><next><block type=\"exp_control_if_then_else\" id=\")DcmR{~1,pRFT#`bCjO$\"><value name=\"CONDITION\"><block type=\"exp_variables_boolean_variable\" id=\"-Mi)jQ4/!^(tbn_cx+X1\"><field name=\"VARIABLE\" id=\"9(f7V~=!@G;?bK#OL`wI\" variabletype=\"boolean\">DEBUG</field></block></value><statement name=\"SUBSTACK\"><block type=\"exp_looks_print\" id=\"n(sm+}YM*BKKgu~.}.RJ\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"#v4PKw`9mUbo2OH4tzdj\"><field name=\"TEXT\">Drive forward!</field></shadow></value></block></statement><statement name=\"SUBSTACK2\"><block type=\"exp_motion_spin_for\" id=\"=/,lEgm#_0,#|@_8kg,v\"><field name=\"MOTOR\">Motor1</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"[/qcXP`FKKI-4i6+y|*+\"><field name=\"NUM\">400</field></shadow></value></block></statement></block></next></block><block type=\"exp_events_when_broadcasted\" id=\"8PyXb.6*`)2xmV7TlVn?\" x=\"170\" y=\"770\"><field name=\"BROADCAST_OPTION\" id=\"Q/ZMS)iVOy|{2hcm3a?W\" variabletype=\"broadcast_msg\">FWD</field><next><block type=\"exp_other_comment\" id=\"z/[DQj~8jy(4HOgWlC`]\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"1M2n`Yrh(F.X6}{d:;5A\"><field name=\"comment\">no need to print since that is already done in the other FWD procedure</field></shadow></value><next><block type=\"exp_control_if_then\" id=\"m}tq!P_-bN[J1eML1K8X\"><value name=\"CONDITION\"><block type=\"exp_operator_not\" id=\"P^rkqdP?Ae?MIBVf7]N3\"><value name=\"OPERAND\"><block type=\"exp_variables_boolean_variable\" id=\"RrfK][,.D]{XXL{:gwWJ\"><field name=\"VARIABLE\" id=\"9(f7V~=!@G;?bK#OL`wI\" variabletype=\"boolean\">DEBUG</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"exp_motion_spin_for\" id=\"89|QsRMjT7OpxiacMggX\"><field name=\"MOTOR\">Motor5</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"Bxcgpu$PsE90i0WLsTV)\"><field name=\"NUM\">400</field></shadow></value></block></statement></block></next></block></next></block><block type=\"exp_events_when_broadcasted\" id=\"WExjuQM=ed/}~s!(UaeT\" x=\"-450\" y=\"1130\"><field name=\"BROADCAST_OPTION\" id=\"e[3?Kic}!m3M*ftr;FG9\" variabletype=\"broadcast_msg\">FWD_S</field><next><block type=\"exp_control_if_then_else\" id=\"6B!v6d5{)|bI?X%t:{2E\"><value name=\"CONDITION\"><block type=\"exp_variables_boolean_variable\" id=\"1PpJaIdDvYd5JtF6-]k%\"><field name=\"VARIABLE\" id=\"9(f7V~=!@G;?bK#OL`wI\" variabletype=\"boolean\">DEBUG</field></block></value><statement name=\"SUBSTACK\"><block type=\"exp_looks_print\" id=\"Gi/QGrbvMzE7c{+Aljla\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"SW(mx2!GO(Q;[SbITY+v\"><field name=\"TEXT\">Drive forward!</field></shadow></value></block></statement><statement name=\"SUBSTACK2\"><block type=\"exp_motion_spin_for\" id=\"Z!_4tmB==Y}+7^55?aIC\"><field name=\"MOTOR\">Motor1</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"C!WO}7D+C.c6}aBY+II)\"><field name=\"NUM\">10</field></shadow></value></block></statement></block></next></block><block type=\"exp_events_when_broadcasted\" id=\"qM(++Ekbc2F:H]}(kqI;\" x=\"230\" y=\"1170\"><field name=\"BROADCAST_OPTION\" id=\"e[3?Kic}!m3M*ftr;FG9\" variabletype=\"broadcast_msg\">FWD_S</field><next><block type=\"exp_control_if_then\" id=\"=){aLkoDAdo5i/G+^wTk\"><value name=\"CONDITION\"><block type=\"exp_operator_not\" id=\"1D_[YxPttgN:L_DXaD8P\"><value name=\"OPERAND\"><block type=\"exp_variables_boolean_variable\" id=\"U1hIXEMuexvC*KgbI1b_\"><field name=\"VARIABLE\" id=\"9(f7V~=!@G;?bK#OL`wI\" variabletype=\"boolean\">DEBUG</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"exp_motion_spin_for\" id=\"|%MO`s6NkFkRPV]wz}k8\"><field name=\"MOTOR\">Motor5</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"@n#2e)v8OIX:6vdwNVZw\"><field name=\"NUM\">10</field></shadow></value></block></statement></block></next></block></xml>","robotConfig":[{"port":[1],"name":"Motor1","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[5],"name":"Motor5","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[4],"name":"Vision4","customName":false,"deviceType":"Vision","deviceClass":"vision","setting":{"config":"{\"config\":{\"brightness\":85,\"signatures\":[{\"name\":\"C_RED\",\"parameters\":{\"uMin\":7515,\"uMax\":10613,\"uMean\":9064,\"vMin\":-1075,\"vMax\":63,\"vMean\":-506,\"rgb\":1,\"type\":1,\"name\":\"C_RED\"},\"range\":1.6},{\"name\":\"C_GREEN\",\"parameters\":{\"uMin\":-7373,\"uMax\":-3077,\"uMean\":-5225,\"vMin\":-3763,\"vMax\":-611,\"vMean\":-2187,\"rgb\":1,\"type\":1,\"name\":\"C_GREEN\"},\"range\":1.2},{\"name\":\"C_BLUE\",\"parameters\":{\"uMin\":-4429,\"uMax\":-2891,\"uMean\":-3660,\"vMin\":6525,\"vMax\":10225,\"vMean\":8375,\"rgb\":1,\"type\":1,\"name\":\"C_BLUE\"},\"range\":1.5},{\"name\":\"SIG_4\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_4\"},\"range\":2.5},{\"name\":\"SIG_5\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_5\"},\"range\":2.5},{\"name\":\"SIG_6\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_6\"},\"range\":2.5},{\"name\":\"SIG_7\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_7\"},\"range\":2.5}],\"codes\":[{\"name\":\"RED_GREEN\",\"code\":\"C_RED, C_GREEN\"},{\"name\":\"BLUE_GREEN\",\"code\":\"C_BLUE, C_GREEN\"},{\"name\":\"BLUE_RED\",\"code\":\"C_BLUE, C_RED\"}]}}","isConfigured":"false"},"triportSourcePort":22}],"slot":0,"platform":"EXP","sdkVersion":"20240802.15.00.00","appVersion":"4.0.8","minVersion":"4.0.0","fileFormat":"2.0.0","targetBrainGen":"First","v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START EXP MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END EXP MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\nmotor Motor1 = motor(PORT1, false);\n\nmotor Motor5 = motor(PORT5, true);\n\n/*vex-vision-config:begin*/\nvision::signature Vision4__C_RED = vision::signature (1, 7515, 10613, 9064,-1075, 63, -506,1.6, 1);\nvision::signature Vision4__C_GREEN = vision::signature (2, -7373, -3077, -5225,-3763, -611, -2187,1.2, 1);\nvision::signature Vision4__C_BLUE = vision::signature (3, -4429, -2891, -3660,6525, 10225, 8375,1.5, 1);\nvision::code Vision4__RED_GREEN = vision::code (Vision4__C_RED, Vision4__C_GREEN);\nvision::code Vision4__BLUE_GREEN = vision::code (Vision4__C_BLUE, Vision4__C_GREEN);\nvision::code Vision4__BLUE_RED = vision::code (Vision4__C_BLUE, Vision4__C_RED);\nvision Vision4 = vision (PORT4, 85, Vision4__C_RED, Vision4__C_GREEN, Vision4__C_BLUE);\n/*vex-vision-config:end*/\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  wait(100,msec);\n  double xAxis = BrainInertial.acceleration(xaxis) * 1000;\n  double yAxis = BrainInertial.acceleration(yaxis) * 1000;\n  double zAxis = BrainInertial.acceleration(zaxis) * 1000;\n  // Combine these values into a single integer\n  int seed = int(\n    xAxis + yAxis + zAxis\n  );\n  // Set the seed\n  srand(seed);\n}\n\n\n\nvoid vexcodeInit() {\n\n  // Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n// Generated code.\n\n// Include the EXP Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\n// User defined function\nvoid myblockfunction_Printinfo();\n\nint Brain_precision = 0, Console_precision = 0, Vision4_objectIndex = 0;\n\nfloat myVariable;\n\nbool DEBUG;\n\nevent message1 = event();\nevent LOOK_FOR_RG = event();\nevent FWD = event();\nevent FWD_S = event();\nevent RT = event();\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToBrain_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Brain_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// User defined function\nvoid myblockfunction_Printinfo() {\n  // This procedure block...\n  Brain.Screen.print(\"X:\");\n  Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Vision4.objects[Vision4_objectIndex].centerX));\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Y:\");\n  Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Vision4.objects[Vision4_objectIndex].centerY));\n  Brain.Screen.newLine();\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  Motor1.setVelocity(20.0, percent);\n  Motor5.setVelocity(20.0, percent);\n  DEBUG = false;\n  Brain.Screen.setFont(mono15);\n  // Loop forever checking for all these color signatures until the car parks and the program ends\n  while (true) {\n    Brain.Screen.clearScreen();\n    Brain.Screen.setCursor(1, 1);\n    LOOK_FOR_RG.broadcastAndWait();\n    wait(0.1, seconds);\n  wait(5, msec);\n  }\n  return 0;\n}\n\n// \"when I receive LOOK_FOR_RG\" hat block\nvoid onevent_LOOK_FOR_RG_0() {\n  // This event looks for red/green object then turns right\n  Vision4.takeSnapshot(Vision4__RED_GREEN);\n  // This conditional checks if the color is detected\n  if (Vision4.objectCount > 0) {\n    myblockfunction_Printinfo();\n    if (Vision4.objects[Vision4_objectIndex].centerY > 120.0) {\n      // Red/green is farther than 6 inches\n      FWD_S.broadcastAndWait();\n    } else if (false) {\n      // Red/green is centered in SDV's field of vision\n    } else {\n      RT.broadcastAndWait();\n      // Adjust to the center object in the view\n    }\n  }\n  else {\n    // No object detected.\n    Brain.Screen.print(\"Look for red/green\");\n  }\n}\n\n// \"when I receive RT\" hat block\nvoid onevent_RT_0() {\n  if (DEBUG) {\n    Brain.Screen.print(\"Turn right!\");\n    Brain.Screen.newLine();\n  }\n  else {\n    Motor1.spinFor(forward, 225.0, degrees, true);\n  }\n}\n\n// \"when I receive RT\" hat block\nvoid onevent_RT_1() {\n  // no need to print since that is already done in the other RT procedure\n  if (!DEBUG) {\n    Motor5.spinFor(reverse, 225.0, degrees, true);\n  }\n}\n\n// \"when I receive FWD\" hat block\nvoid onevent_FWD_0() {\n  if (DEBUG) {\n    Brain.Screen.print(\"Drive forward!\");\n    Brain.Screen.newLine();\n  }\n  else {\n    Motor1.spinFor(forward, 400.0, degrees, true);\n  }\n}\n\n// \"when I receive FWD\" hat block\nvoid onevent_FWD_1() {\n  // no need to print since that is already done in the other FWD procedure\n  if (!DEBUG) {\n    Motor5.spinFor(forward, 400.0, degrees, true);\n  }\n}\n\n// \"when I receive FWD_S\" hat block\nvoid onevent_FWD_S_0() {\n  if (DEBUG) {\n    Brain.Screen.print(\"Drive forward!\");\n    Brain.Screen.newLine();\n  }\n  else {\n    Motor1.spinFor(forward, 10.0, degrees, true);\n  }\n}\n\n// \"when I receive FWD_S\" hat block\nvoid onevent_FWD_S_1() {\n  if (!DEBUG) {\n    Motor5.spinFor(forward, 10.0, degrees, true);\n  }\n}\n\n\nint main() {\n  // Initializing Robot Configuration. DO NOT REMOVE!\n  vexcodeInit();\n\n  // register event handlers\n  LOOK_FOR_RG(onevent_LOOK_FOR_RG_0);\n  RT(onevent_RT_0);\n  RT(onevent_RT_1);\n  FWD(onevent_FWD_0);\n  FWD(onevent_FWD_1);\n  FWD_S(onevent_FWD_S_0);\n  FWD_S(onevent_FWD_S_1);\n\n  wait(15, msec);\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // Wait for ADI sensors to initialize\n  wait(100, msec);\n\n\n  whenStarted1();\n}","target":"Physical"}